# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
export GPG_TTY=$(tty)
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}â–“â–’â–‘ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}â–“â–’â–‘ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}â–“â–’â–‘ The clone has failed.%f%b"
fi
source "$HOME/.zinit/bin/zinit.zsh"
### End of Zinit's installer chunk

# OMZ provide lib for many plugins, So load first
zinit wait lucid for \
    OMZL::git.zsh \
    OMZL::completion.zsh \
    OMZL::history.zsh \
    OMZL::key-bindings.zsh \
    OMZL::theme-and-appearance.zsh \
    OMZL::prompt_info_functions.zsh \
# Install OMZ plugin
zinit wait lucid for \
    OMZP::git \
    OMZP::autojump \
    OMZP::web-search \
    OMZP::encode64 \
    OMZP::tmux \
    OMZP::extract \
    OMZP::zsh_reload \
    OMZP::fzf \
    OMZP::colored-man-pages \
# Install OMZ autocompletion
zinit as"completion" wait lucid for \
    OMZ::plugins/extract/_extract \
    OMZ::plugins/ripgrep/_ripgrep \
    # OMZ::plugins/docker/_docker \
    # plugins/_hostctl
    # hostctl
# Install third party plugin
zinit wait lucid for \
    zpm-zsh/ssh \
    paulirish/git-open \
    wfxr/forgit \
    mfaerevaag/wd \
    zinit-zsh/z-a-bin-gem-node\
    atinit"zpcompinit; zpcdreplay" \
        zdharma/fast-syntax-highlighting \
    atload"_zsh_autosuggest_start" \
        zsh-users/zsh-autosuggestions \
    atload"zicompinit; zicdreplay" blockf atpull"zinit creinstall -q ." \
        zsh-users/zsh-completions
zinit wait"1" lucid for \
    psprint/zsh-navigation-tools \
### End of Zinit's plugin install chunk

zinit as"program" wait"1" if"[[ $OSTYPE == linux* ]]" lucid from"gh-r" for \
    mv"exa* -> exa"    ogham/exa \
    mv"*/rg -> rg"     BurntSushi/ripgrep \
    mv"*/bin/hub -> hub"    @github/hub \
    mv"*/hyperfine -> hyperfine"     @sharkdp/hyperfine \
    mv"*/bat -> bat"    @sharkdp/bat \

#https://zdharma.org/zinit/wiki/id-as/
# zinit ice as"program" from"gh-r" mv"docker-c* -> docker-compose"
# zinit light "docker/compose"
# zinit ice as"completion" id-as"dc-complete"
# zinit load docker/compose

# setopt promptsubst  # OMZ theme must use this
# PS1="READY > "
# zinit ice wait'!0'
# zinit snippet OMZT::af-magic  #OMZT::pmcgee
zinit ice depth'1'
zinit light romkatv/powerlevel10k

#autoload -Uz compinit; compinit; zinit cdreplay -q

# Customize to your needs...
# ZSH config
HISTSIZE=10000000
SAVEHIST=10000000
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_FIND_NO_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt EXTENDED_HISTORY
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=3,bold,underline'
ZSH_AUTOSUGGEST_USE_ASYNC=1
DISABLE_AUTO_TITLE="true"
### End of zsh config chunk

# fzf config
export FZF_BASE=/usr/local/bin/fzf
export FZF_DEFAULT_OPTS='
        --height 90% --multi --layout=reverse --border
        --bind ctrl-f:page-down,ctrl-b:page-up
        --preview-window "right:60%:wrap"
        '
        # --preview "head -100 {}"

#forgit config
export FORGIT_LOG_GRAPH_ENABLE=false

# custom function
function jim/jdk() {
        version=$1
        export JAVA_HOME=$(/usr/libexec/java_home -v"$version");
        java -version
 }

function jim/awsp() {
    export AWS_PROFILE="$(jim/aws-profiles | fzf)"
}

function jim/aws-profiles() {
    cat ~/.aws/credentials | grep '\[' | grep -v '#' | tr -d '[' | tr -d ']'
}

# system env
export PATH="$HOME/.tgenv/bin:$PATH"
export PATH="$HOME/.tfenv/bin:$PATH"
export LC_ALL="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export DISABLE_MAGIC_FUNCTIONS=true
export BAT_CONFIG_PATH="$HOME/.bat.conf"
# export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export EDITOR="vim"

alias zshconfig="vim ~/.zshrc"
alias sshconfig="vim ~/.ssh/config"
alias his="history -i"
alias git="hub"
alias vimpluginstall="vim +PlugInstall! +qa!"
alias vimplugupdate="vim +PlugUpdate! +qa!"
alias vimplugclean="vim +PlugClean! +qa!"
alias vimplugupgrade="vim +PlugUpgrade! +qa!"
alias wget="wget -c "
alias axel="axel -a -n 5 "
alias lock="m lock"
alias gop="git remote prune origin"
alias tf="terraform"
alias rgf="rg --no-heading --files | rg"
alias cat="bat"
alias cp="rsync -aP"
alias ls="exa"
alias rm="rm -i"
alias weather='curl v2.wttr.in'
if [[ $OSTYPE == darwin* ]]; then
    alias sed='gsed'
fi

# hub version > /dev/null 2>&1 && eval "$(hub alias -s)"

source $HOME/github/macdotfiles/mac_config/misc.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
# custom p10k
# POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION="ðŸ¤º"
POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION=$'\U1F93A'
